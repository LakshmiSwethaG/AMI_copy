---
# AWS - Copy Image and Output the requisite AMI ID

- name: Copy to Encrypted Volumes in Regions
  block:
    - name: Given AMI Name
      debug: 
        msg: "AMI NAME '{{ AMI_NAME }}'"

    - name: Retrieve AMI ID using AMI NAME
      command: aws ec2 describe-images --region {{ AWS_SOURCE_REGION }} --filters "Name=name,Values={{ AMI_NAME }}" --profile {{ AWS_PROFILE }}
      register: retrive_ami_id

    - set_fact:
        ami_id: "{{ (retrive_ami_id.stdout|from_json).Images[0].ImageId }}"

    - name: AMI ID
      debug: 
        msg: "Ami id '{{ ami_id }}'"

    - name: Copy Image to single region
      command: aws ec2 copy-image --source-image-id {{ ami_id }} --source-region {{ AWS_SOURCE_REGION }} --region {{ AWS_DEST_REGION }} --name {{ AMI_NAME }} --encrypted --kms-key-id {{ AWS_KMS_KEY }} --profile {{ AWS_PROFILE }}
      register: region_copy

    - name: New AMI ID
      debug:
        msg: "Destination AMI ID- '{{ (region_copy.stdout|from_json).ImageId }}'"

    - name: Check Image Copy
      command: aws ec2 describe-images --region {{ AWS_DEST_REGION }} --image-ids {{ (region_copy.stdout|from_json).ImageId }} --profile {{ AWS_PROFILE }}
      register: copystate
      until: (copystate.stdout|from_json).Images[0].State == "available"
      retries: 400
      delay: 10
      
  rescue:
    - name: Error Occured, debug false
      debug:
        msg: 'Error Occured, debug false'
      when: IMAGE_DEBUG == "false"
    - name: Error Occured, debug true.
      debug:
        msg: Error Occured, debug true.
      when: IMAGE_DEBUG == "true"
    - name: Fail Build
      fail:
        msg: "Build Failed, Cleanup Completed Please Review Logging"